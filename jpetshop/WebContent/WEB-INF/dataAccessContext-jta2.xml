<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- - Application context definition for JPetStore's data access layer. 
	- Accessed by business layer objects defined in "applicationContext.xml" 
	- (see web.xml's "contextConfigLocation"). - - This version of the data access 
	layer works on two databases (main/order), - using JNDI DataSources with 
	JtaTransactionManager. It obviously depends on - JTA support in the container, 
	and on pre-configured container DataSources. -->
<beans>

	<bean id="jotm" class="org.springframework.transaction.jta.JotmFactoryBean" />

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Main JNDI DataSource for J2EE environments -->
	<!-- Refers to the main database, containing product and account data -->
	<!-- (see dataAccessContext-local.xml for an alternative) -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName"> <value>java:comp/env/jdbc/jpetstore</value> </property> 
		</bean> -->

	<bean id="dataSource" class="org.enhydra.jdbc.pool.StandardXAPoolDataSource"
		destroy-method="shutdown">
		<property name="dataSource">
			<!-- 内部XA数据源 -->
			<bean class="org.enhydra.jdbc.standard.StandardXADataSource"
				destroy-method="shutdown">
				<property name="transactionManager">
					<ref local="jotm" />
				</property>
				<property name="driverName">
					<value>oracle.jdbc.driver.OracleDriver</value>
				</property>
				<property name="url">
					<value>jdbc:oracle:thin:@localhost:1521:ZJ</value>
				</property>
			</bean>
		</property>
		<property name="user">
			<value>jpetshop1</value>
		</property>
		<property name="password">
			<value>1</value>
		</property>
	</bean>

	<!-- Additional JNDI DataSource for J2EE environments -->
	<!-- Refers to the order database, containing order data -->
	<!-- (see dataAccessContext-local.xml for an alternative) -->
	<!-- <bean id="orderDataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName"> <value>java:comp/env/jdbc/jpetstore-order</value> 
		</property> </bean> -->

	<bean id="orderDataSource" class="org.enhydra.jdbc.pool.StandardXAPoolDataSource"
		destroy-method="shutdown">
		<property name="dataSource">
			<!-- 内部XA数据源 -->
			<bean class="org.enhydra.jdbc.standard.StandardXADataSource"
				destroy-method="shutdown">
				<property name="transactionManager">
					<ref local="jotm" />
				</property>
				<property name="driverName">
					<value>oracle.jdbc.driver.OracleDriver</value>
				</property>
				<property name="url">
					<value>jdbc:oracle:thin:@localhost:1521:ZJ</value>
				</property>
			</bean>
		</property>
		<property name="user">
			<value>jpetshop2</value>
		</property>
		<property name="password">
			<value>1</value>
		</property>
	</bean>

	<!-- Transaction manager that delegates to JTA (for a transactional JNDI 
		DataSource) -->
	<!-- Necessary here due to the need for distributed transactions across 
		two databases -->
	<!-- (see dataAccessContext-local.xml for an alternative) -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="userTransaction">
			<ref local="jotm" />
		</property>
	</bean>

	<!-- SqlMap setup for iBATIS Database Layer -->
	<bean id="sqlMap" class="org.springframework.orm.ibatis.SqlMapFactoryBean">
		<property name="configLocation">
			<value>WEB-INF/sql-map-config.xml</value>
		</property>
	</bean>


	<!-- ========================= DAO DEFINITIONS: IBATIS IMPLEMENTATIONS ========================= -->

	<bean id="accountDao"
		class="org.springframework.samples.jpetstore.dao.ibatis.SqlMapAccountDao">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMap">
			<ref local="sqlMap" />
		</property>
	</bean>

	<bean id="categoryDao"
		class="org.springframework.samples.jpetstore.dao.ibatis.SqlMapCategoryDao">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMap">
			<ref local="sqlMap" />
		</property>
	</bean>

	<bean id="productDao"
		class="org.springframework.samples.jpetstore.dao.ibatis.SqlMapProductDao">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMap">
			<ref local="sqlMap" />
		</property>
	</bean>

	<bean id="itemDao"
		class="org.springframework.samples.jpetstore.dao.ibatis.SqlMapItemDao">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMap">
			<ref local="sqlMap" />
		</property>
	</bean>

	<!-- Refers to the order database here -->
	<!-- (see dataAccessContext-local.xml for an alternative) -->
	<bean id="orderDao"
		class="org.springframework.samples.jpetstore.dao.ibatis.SqlMapOrderDao">
		<property name="dataSource">
			<ref local="orderDataSource" />
		</property>
		<property name="sqlMap">
			<ref local="sqlMap" />
		</property>
		<property name="sequenceDao">
			<ref local="sequenceDao" />
		</property>
	</bean>

	<!-- OrderDao definition for MS SQL Server -->
	<!-- (to be used instead of the default orderDao) -->
	<!-- <bean id="orderDao" class="org.springframework.samples.jpetstore.dao.ibatis.MsSqlOrderDao"> 
		<property name="dataSource"><ref local="orderDataSource"/></property> <property 
		name="sqlMap"><ref local="sqlMap"/></property> <property name="sequenceDao"><ref 
		local="sequenceDao"/></property> </bean> -->

	<!-- Refers to the order database here -->
	<!-- (see dataAccessContext-local.xml for an alternative) -->
	<!-- <bean id="sequenceDao" class="org.springframework.samples.jpetstore.dao.ibatis.SqlMapSequenceDao"> 
		<property name="dataSource"> <ref local="orderDataSource" /> </property> 
		<property name="sqlMap"> <ref local="sqlMap" /> </property> </bean> -->

	<!-- SequenceDao definition for Oracle databases -->
	<!-- (to be used instead of the default sequenceDao) -->
	<bean id="sequenceDao"
		class="org.springframework.samples.jpetstore.dao.ibatis.OracleSequenceDao">
		<property name="dataSource">
			<ref local="orderDataSource" />
		</property>
		<property name="sqlMap">
			<ref local="sqlMap" />
		</property>
	</bean>

</beans>
