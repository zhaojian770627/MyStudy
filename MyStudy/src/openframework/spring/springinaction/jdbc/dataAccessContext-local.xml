<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!-- - Application context definition for JPetStore's data access layer. 
	- Accessed by business layer objects defined in "applicationContext.xml" 
	- (see web.xml's "contextConfigLocation"). - - This version of the data access 
	layer works on a combined database, - using a local DataSource with DataSourceTransactionManager. 
	It does not - need any JTA support in the container: It will run as-is in 
	plain Tomcat. -->
<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Local DataSource that refers to a combined database -->
	<!-- (see dataAccessContext-jta.xml for an alternative) -->
	<!-- The placeholders are resolved from jdbc.properties through -->
	<!-- the PropertyPlaceholderConfigurer in applicationContext.xml -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@20.10.81.30:1521:ORCL</value>
		</property>
		<property name="username">
			<value>zj</value>
		</property>
		<property name="password">
			<value>1</value>
		</property>
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>
	<bean id="spitterDao"
		class="openframework.spring.springinaction.jdbc.SimpleJdbcTemplateSpitterDao">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>
</beans>
